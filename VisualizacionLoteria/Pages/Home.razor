@page "/"
@using VisualizacionLoteria.Pages.Components
@using VisualizacionLoteria.Pages.Models;
@inject IDialogService DialogService

<PageTitle>Simulación</PageTitle>

<MudContainer Class="px-8" MaxWidth="MaxWidth.False">
    <MudText Typo="Typo.h3" Align="Align.Center" >Simular la lotería nacional</MudText>
    <MudGrid Class="mt-5" Justify="Justify.Center">

        <MudItem xs="12" md="8">
            @*Selección de números.*@
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12" md="10">
                    <MudDataGrid Items="@NumerosJugados" Filterable="false" SortMode="@SortMode.None" Groupable="false">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Números y fracciones a jugar</MudText>
                            <MudSpacer />
                            <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Success" @onclick="AñadirNumero">@mensajeDeboton</MudButton>
                        </ToolBarContent>
                        <Columns>
                            <PropertyColumn Property="x => x.NumeroMayor" Title="Numero mayor" />
                            <PropertyColumn Property="x => x.NumeroDeFracciones" Title="Fracciones" />
                            <TemplateColumn CellClass="d-flex justify-end">
                                <CellTemplate>
                                    <MudStack Row>
                                        <MudIconButton OnClick="@(() => BorrarNumero(@context.Item))" Color="@Color.Default" Icon="@Icons.Material.Filled.Delete" />
                                    </MudStack>
                                </CellTemplate>
                            </TemplateColumn>
                        </Columns>
                    </MudDataGrid>
                </MudItem>                                                
            </MudGrid>
            
        </MudItem>       
    </MudGrid>
    @*Simulación*@
    <Simulacion />         

</MudContainer>

@code
{
    public List<LoteriaComprada> NumerosJugados { get; set; } = new List<LoteriaComprada>();
    private string mensajeDeboton = "Añadir número";

    async Task AñadirNumero()
    {
        var parameters = new DialogParameters<Dialogo>();

        var dialog = await DialogService.ShowAsync<Dialogo>("Añadir número", parameters);
        var result = await dialog.Result;


        if (!result.Canceled)
        {
            //In a real world scenario we would reload the data from the source here since we "removed" it in the dialog already.
            LoteriaComprada loteriaComprada = (LoteriaComprada)result.Data;
            NumerosJugados.Add(loteriaComprada);
        }
        cambiarMensajeDeBoton();

    }

    void BorrarNumero(LoteriaComprada item)
    {
        NumerosJugados.Remove(item);
        cambiarMensajeDeBoton();
    }

    void cambiarMensajeDeBoton()
    {
        if (NumerosJugados.Any())
        {
            mensajeDeboton = "Añadir otro número";
        }
        else
        {
            mensajeDeboton = "Añadir número";
        }

        InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }   
}