@page "/"
@using VisualizacionLoteria.Pages.Components
@using VisualizacionLoteria.Pages.Models;
@inject IDialogService DialogService

<PageTitle>Simulación</PageTitle>

<MudContainer MaxWidth="MaxWidth.False">
    <MudGrid Class="mt-5 px-3" Justify="Justify.Center">
        <MudItem xs="12">
            <MudGrid Justify="Justify.Center">
                <MudItem xs="12" md="7" Style="max-width: 1010px">
                    <MudGrid Justify="Justify.Center">
                        @*Item #1: Titulo*@
                        <MudItem xs="12" md="12">
                            <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">Simular jugar los chances nacionales</MudText>
                        </MudItem>
                        @*Item #2: Subtitulo*@
                        <MudItem xs="12" md="12">
                            <MudText Align="Align.Center">Some long pricing text should go here maybe? who knows what text you would want here, i guess i cant fill it in for you.</MudText>
                        </MudItem>
                        @*Item #3: Contenido*@
                        <MudItem xs="12" md="12" Style="width: 100%;">
                            <MudGrid Justify="Justify.SpaceEvenly">
                                @*Item #3.1: Simulación*@
                                <MudItem xs="12" md="6" Style="max-width: 495px">
                                    <MudGrid Justify="Justify.Center">
                                        <MudItem xs="12" md="12">
                                            <MudCard Class="pa-5" Elevation="4">
                                                <MudCardHeader>
                                                    <CardHeaderAvatar>
                                                        <MudAvatar Size="Size.Small" Color="Color.Primary">1</MudAvatar>
                                                    </CardHeaderAvatar>
                                                    <CardHeaderContent>
                                                        <MudText Typo="Typo.body1">Seleccione numero y fracciones.</MudText>
                                                    </CardHeaderContent>
                                                    <CardHeaderActions>
                                                        <MudTooltip Text="Añadir número y fracción.">
                                                            <MudIconButton Icon="@Icons.Material.Filled.Add" Color="Color.Success" @onclick="AñadirNumero" Disabled="SimulacionEnProgreso" />
                                                        </MudTooltip>
                                                    </CardHeaderActions>
                                                </MudCardHeader>
                                                @if (NumerosJugados.Any())
                                                {
                                                    <MudCardContent>
                                                        <MudDataGrid Items="@NumerosJugados" Filterable="false" SortMode="@SortMode.None" Groupable="false" Breakpoint="Breakpoint.None">
                                                            <Columns>
                                                                <PropertyColumn Property="x => x.NumeroMayor" Title="Numero mayor" />
                                                                <PropertyColumn Property="x => x.NumeroDeFracciones" Title="Fracciones" />
                                                                <TemplateColumn CellClass="d-flex justify-end">
                                                                    <CellTemplate>
                                                                        <MudStack Row>
                                                                            <MudTooltip Text="Borrar número">
                                                                                <MudIconButton OnClick="@(() => BorrarNumero(@context.Item))" Color="@Color.Default" Icon="@Icons.Material.Filled.Delete" Disabled="SimulacionEnProgreso" />
                                                                            </MudTooltip>
                                                                        </MudStack>
                                                                    </CellTemplate>
                                                                </TemplateColumn>
                                                            </Columns>
                                                        </MudDataGrid>
                                                    </MudCardContent>
                                                }
                                                else
                                                {
                                                    <MudCardContent>
                                                        <MudText Typo="Typo.body2">No ha seleccionado ningún número.</MudText>
                                                    </MudCardContent>
                                                }
                                                <MudCardHeader>
                                                    <CardHeaderAvatar>
                                                        <MudAvatar Size="Size.Small" Color="Color.Primary">2</MudAvatar>
                                                    </CardHeaderAvatar>
                                                    <CardHeaderContent>
                                                        <MudText Typo="Typo.body1">Seleccione la velocidad de la simulación.</MudText>
                                                    </CardHeaderContent>
                                                </MudCardHeader>
                                                <MudCardContent>
                                                    <MudGrid Justify="Justify.Center">
                                                        <MudItem>
                                                            <MudButtonGroup Color="Color.Primary" Variant="Variant.Text">
                                                                <MudButton @onclick="() => SetLoteriasPorSegundo(10)" Disabled="DeshabilitarBoton(10)">Lenta</MudButton>
                                                                <MudButton @onclick="() => SetLoteriasPorSegundo(100)" Disabled="DeshabilitarBoton(100)">Media</MudButton>
                                                                <MudButton @onclick="() => SetLoteriasPorSegundo(1000)" Disabled="DeshabilitarBoton(1000)">Rápida</MudButton>
                                                            </MudButtonGroup>
                                                        </MudItem>
                                                    </MudGrid>
                                                </MudCardContent>
                                                <MudCardHeader>
                                                    <CardHeaderAvatar>
                                                        <MudAvatar Size="Size.Small" Color="Color.Primary">3</MudAvatar>
                                                    </CardHeaderAvatar>
                                                    <CardHeaderContent>
                                                        <MudText Typo="Typo.body1">A jugar!</MudText>
                                                    </CardHeaderContent>
                                                </MudCardHeader>
                                                <MudCardContent>
                                                    <MudGrid Justify="Justify.Center" Spacing="3">
                                                        @if (@SimulacionEnProgreso)
                                                        {
                                                            <MudItem>
                                                                <MudButton Variant="Variant.Outlined" Color="Color.Error" @onclick="() => IniciarODetenerSimulacion()" StartIcon="@Icons.Material.Filled.Pause">Detener</MudButton>
                                                            </MudItem>
                                                        }
                                                        else
                                                        {
                                                            <MudItem>
                                                                <MudButton Variant="Variant.Outlined" Color="Color.Primary" @onclick="() => IniciarODetenerSimulacion()" Disabled="@DeshabilitarBotonDeSimulacion" StartIcon="@Icons.Material.Filled.PlayArrow">Simular</MudButton>
                                                            </MudItem>
                                                        }
                                                        <MudItem>
                                                            <MudButton Variant="Variant.Outlined" Color="Color.Info" @onclick="() => ReiniciarSimulacion()" Disabled="@DeshabilitarBotonDeReiniciado" StartIcon="@Icons.Material.Filled.RestartAlt">Reiniciar</MudButton>
                                                        </MudItem>
                                                    </MudGrid>
                                                </MudCardContent>
                                            </MudCard>
                                        </MudItem>
                                    </MudGrid>
                                </MudItem>
                                @*Item #3.2: Estadísticas*@
                                <MudItem xs="12" md="6" Style="max-width: 495px">
                                    <MudCard Class="pa-5" Elevation="4">
                                        <MudCardHeader>
                                            <CardHeaderContent>
                                                <MudText Typo="Typo.body1"><b>Premios</b></MudText>
                                            </CardHeaderContent>
                                        </MudCardHeader>
                                        <MudCardContent>
                                            <MudSimpleTable Dense=true>
                                                <thead>
                                                    <tr>
                                                        @foreach (var h in PremiosHeaders)
                                                        {
                                                            <th>@h</th>
                                                        }
                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var lista in PremiosRows)
                                                    {
                                                        <tr>
                                                            @foreach (var data in lista)
                                                            {
                                                                <td>@data</td>
                                                            }
                                                        </tr>
                                                    }
                                                </tbody>
                                            </MudSimpleTable>
                                        </MudCardContent>
                                    </MudCard>
                                </MudItem>
                                @*Item #3.3: Simulación*@
                                 <MudItem xs="12" md="12">
                                    <Simulacion NumerosJugados="NumerosJugados" LoteriasPorSegundo="LoteriasPorSegundo" DeberiaEstarSimulando="SimulacionEnProgreso" @bind-DeberiaReiniciarSimulacion="DeberiaReiniciarSimulacion" />
                                </MudItem>
                            </MudGrid>
                        </MudItem>
                    </MudGrid>
                </MudItem>
            </MudGrid>
        </MudItem>
    </MudGrid>
                



</MudContainer>

@code
{
    public List<LoteriaComprada> NumerosJugados { get; set; } = new List<LoteriaComprada>();
    private string mensajeDeboton = "Añadir número";
    private int? LoteriasPorSegundo = null;
    private bool SimulacionEnProgreso = false;
    private bool DeshabilitarBotonDeSimulacion => !NumerosJugados.Any() || LoteriasPorSegundo == null;
    private bool DeshabilitarBotonDeReiniciado => !HaSimulado;
    private bool HaSimulado = false;
    private bool DeberiaReiniciarSimulacion = false;

    private readonly string[] PremiosHeaders = { "Tipo", "Probabilidad (1 en...)", "Premio"};
    private readonly List<string[]> PremiosRows = new List<string[]>
    {
        new string[] { "Premio Mayor", "0", "₡24,000,000" },
        new string[] { "Segundo Premio", "0", "₡7,400,000" },
        new string[] { "Tercer Premio", "0", "₡1,800,000" },
        new string[] { "Igual a mayor, diferente serie", "0", "₡40,000" },
        new string[] { "Igual a segundo, diferente serie", "0", "₡8,400" },
        new string[] { "Igual a tercero, diferente serie", "0", "₡6,000" },
        new string[] { "Inversa del mayor", "0", "₡3,000" },
        new string[] { "Inversa del segundo", "0", "₡2,400" },
        new string[] { "Inversa del tercero", "0", "₡1,500" },
        new string[] { "Número duplicador", "0", "₡0" }
    };

    private async Task AñadirNumero()
    {
        var parameters = new DialogParameters<Dialogo>();

        var dialog = await DialogService.ShowAsync<Dialogo>("Añadir número", parameters);
        var result = await dialog.Result;


        if (!result.Canceled)
        {
            //In a real world scenario we would reload the data from the source here since we "removed" it in the dialog already.
            LoteriaComprada loteriaComprada = (LoteriaComprada)result.Data;
            NumerosJugados.Add(loteriaComprada);
        }
        cambiarMensajeDeBoton();
    }

    private void BorrarNumero(LoteriaComprada item)
    {
        NumerosJugados.Remove(item);
        cambiarMensajeDeBoton();
    }

    private void cambiarMensajeDeBoton()
    {
        if (NumerosJugados.Any())
        {
            mensajeDeboton = "Añadir otro número";
        }
        else
        {
            mensajeDeboton = "Añadir número";
        }

        InvokeAsync(() =>
        {
            StateHasChanged();
        });
    }


    private void IniciarODetenerSimulacion()
    {
        HaSimulado = true;
        SimulacionEnProgreso = !SimulacionEnProgreso;
    }

    private void ReiniciarSimulacion()
    {
        DeberiaReiniciarSimulacion = true;
    }

    private void SetLoteriasPorSegundo(int loteriasPorSegundo)
    {
        LoteriasPorSegundo = loteriasPorSegundo;
    }

    private bool DeshabilitarBoton(int velocidad)
    {
        return this.LoteriasPorSegundo == velocidad || SimulacionEnProgreso;
    }

}